#!/bin/sh

# TODO: automate installation of nerd-fonts

set -e

FLAG=$1
echo "
  Options (choose one):
  -v      Verbose output (debug)
  -u      Force update for apt repositories

  Executing with: $FLAG

"

if [ "$FLAG" = "-v" ]; then
    set -x
fi

APT_PACKAGES="
bat
ripgrep
colordiff
curl
dunst
feh
fonts-firacode
g++
git
git-extras
hub
i3
i3lock
i3lock-fancy
i3status
j4-dmenu-desktop
redshift
py3status
qdbus-qt5
scrot
slack
tree
ubuntu-restricted-extras
unp
vim
xautolock
"

SNAP_PACKAGES="
bitwarden
spotify
slack --classic
"

# Ensure that ~/opt and ~/bin exists
mkdir -p $HOME/opt
mkdir -p $HOME/bin

# Add to PATH if not present already
PATH=$PATH:$HOME/bin

# Utils
is_installed() {
    if hash "$1" 2>/dev/null; then
        return 0
    else
        return 1
    fi
}

update() {
    echo "  updating..."
    sudo apt update $1
}

apt_install() {
    if ! is_installed "$1"; then
        echo  "  installling: '$1'"
        sudo apt install -y --force-yes "$1"
    fi
}

snap_install() {
    NAME=$(echo "$1" | cut -d" " -f1)

    if ! is_installed "$NAME"; then
        echo  "  installling: '$1'"
        sudo snap install "$1"
    fi
}

install_asdf() {
    if is_installed asdf; then
        return 0
    fi

    git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.8.1
}

install_packages() {
    for package in $APT_PACKAGES
    do
        apt_install $package
    done

    for package in $SNAP_PACKAGES
    do
        snap_install $package
    done
}

# Install
report_uninstalled() {
    for package in $1
    do
        if ! is_installed $package; then
            echo "  not installed: '$package'"
        fi
    done
}

run() {
    report_uninstalled $APT_PACKAGES
    report_uninstalled $SNAP_PACKAGES

    if [ "$FLAG" = "-u" ]; then
        update
    fi

    install_packages

    # Custom install
    install_asdf
}

# Move into 'tmp' and make hell...
EXEC_DIR=$(pwd)
mkdir -p tmp
cd tmp

# Start installing and report exit code
echo "  Running..."
run
echo "  Exit code: $?"

# Cleanup 'tmp'
cd $EXEC_DIR
rm -rf tmp
